<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <security:http auto-config="true">
    
        <security:intercept-url pattern="/login**" access="permitAll"/>
        <security:intercept-url pattern="/bower_components/**" access="permitAll"/>
        <security:intercept-url pattern="/fonts/**" access="permitAll"/>
        <security:intercept-url pattern="/i18n/**" access="permitAll"/>
        <security:intercept-url pattern="/images/**" access="permitAll"/>
        <security:intercept-url pattern="/javascript/**" access="permitAll"/>
        <security:intercept-url pattern="/node_modules/**" access="permitAll"/>
        <security:intercept-url pattern="/styles/**" access="permitAll"/>
        <security:intercept-url pattern="/template/**" access="permitAll"/>
        <security:intercept-url pattern="/logon" access="permitAll"/>
        
        <security:intercept-url pattern="/**" access="!anonymous"/> <!-- 一定要放最后 ，表示除了上面的允许非登录访问外，其他所有的都需登录访问-->
        
 		<security:form-login login-page="/login.html" username-parameter="username" password-parameter="password"
			default-target-url="/index.html" always-use-default-target="true" />
			 
        <security:logout logout-url="/logout" logout-success-url="/login.html" delete-cookies="JSESSIONID" invalidate-session="true"/>
        <security:remember-me remember-me-parameter="remember_me"/> 
        <security:csrf disabled="true"/>
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="daoAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService">
            <ref bean="userDetailsService"/>
        </property>
        <property name="passwordEncoder">
            <ref bean="passwordEncoder"/>
        </property>
    </bean>

    <bean id="userDetailsService"
          class="com.cetc.bigdata.analysis.web.service.DbUserDetailService">
        <property name="dataSource" ref="dataSource">
        </property>
        <property name="authoritiesByUsernameQuery">
            <value>
                <![CDATA[SELECT login_name username, 'admin' AS authority
                           FROM user
                          WHERE login_name = ?
                         ]]>
            </value>
        </property>
        <property name="usersByUsernameQuery">
            <value>
                <![CDATA[SELECT user_id,user_name,login_name, user_password, 1 AS enabled
                           FROM user
                          WHERE login_name = ? ]]>
            </value>
        </property>
    </bean>

    <bean id="passwordEncoder"
          class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <bean id="dbAuthenticationService"
          class="com.cetc.bigdata.analysis.web.service.DbAuthenticationService"/>

</beans>